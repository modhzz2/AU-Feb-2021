var add = (function() {
    var counter = 0;
    return function() { counter += 1; }
})();

add(); 
add(); 
add();



A self-invoking function is a function which is invoked automatically(without being called).
The variable add is assigned to the return value of a self-invoking function.
The self-invoking function only runs once. It sets the counter to zero (0), and returns a function expression.
This way add becomes a function, and can access the counter in the parent scope.
This is called a JavaScript closure. It makes it possible for a function to have "private" variables.
A closure is a function having access to the parent scope, even after the parent function has closed.