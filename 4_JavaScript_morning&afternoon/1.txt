1
var arr1=[1,2,3]
var arr2=[4,5]
var arr3=arr1.concat(arr2)
// arr3 contains [1,2,3,4,5]

2
var ages = [32, 33, 16, 40];
function checkAdult(age) {
  return age >= 18;
}
ages.every(checkAdult);
// will return true if all the values in array are >=18 or else returns false.

3
var ages = [32, 33, 16, 40];
function checkAdult(age) {
  return age >= 18;
}
ages.filter(checkAdult);
// will remove all the entries which are <18 from array ages

4
var fruits = ["apple", "orange", "cherry"];
fruits.forEach(myFunction);
function myFunction(item) {
  console.log(item);
}
// will print orange apple cherry(function will be called with every element as argument)

5
var fruits = ["Banana", "Orange", "Apple", "Mango"];
console.log(fruits.indexOf("Apple"));
// will return the first index of given element from the left in the array

6
var fruits = ["Banana", "Orange", "Apple", "Mango"];
var energy = fruits.join();
// energy will be a string with all the elements joined. "Banana,Orange,Apple,Mango"

7
var fruits = ["Banana", "Orange", "Apple", "Mango"];
console.log(fruits.lastIndexOf("Apple"));
// will return the first index of given element from the right in the array

8
var numbers = [4, 9, 16, 25];
var x = numbers.map(helper)
function helper(x){
    return x*3;
}
//similar to forEach but it creates a new array with the results of the function

9
var fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.pop();
// removes the last element from array

10
var fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.push("Kiwi"); 
// adds new item to the end of array

11
var numbers = [175, 50, 25];
numbers.reduce(myFunc);
function myFunc(a, b) {
  return a-b;
}
// as the name suggests, reduces the array to a single value by doing the specified operation in the function (stores the answer in the accumulator)
//175-50=>125-25=>25...

12
var numbers = [175, 50, 25];
numbers.reduceRight(myFunc);
function myFunc(a, b) {
  return a-b;
}
//similar to the above function, but starts from the right side.

13
var fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.reverse();
//reverses order of elements in the array

14
var fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.shift(); 
//similar to pop, but removes the leftmost element

15
var fruits = ["Banana", "Orange", "Lemon", "Apple", "Mango"];
var citrus = fruits.slice(1, 3);
//takes the elements from index 1, 2 and returns them as an array.

16
var ages = [3, 10, 18, 20];
function checkAdult(age) {
  return age >= 18;
}
ages.some(checkAdult);
// in constrast to 'every' method, this will return true even if one of the elements passes the test.

17
<script>
function employee(name,jobtitle,born)
{
 this.name=name;
 this.jobtitle=jobtitle;
 this.born=born;
}
var fred=new employee("Fred Flintstone","Caveman",1970);
document.write(fred.toSource());
</script>
// represents the source code of an object.

18
var fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.sort();
//sorts the array

19
var fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.splice(2, 0, "Lemon", "Kiwi");
//removes the elements as specified as optionally adds new elements as shown in the below template
//array.splice(index, howmany, item1, ....., itemX);

20
var fruits = ["Banana", "Orange", "Apple", "Mango"];
var x = fruits.toString();
//similar to join function

21
var fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.unshift("Lemon","Pineapple");
//similar to shift but add items to the beginning of the array




















